import subprocess
import re
import os


def validate_ip(ip):
    # Regular expression pattern for validating IP address
    ip_pattern = r"^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$"
    return re.match(ip_pattern, ip)


def create_target_file(targets):
    with open("target.txt", "w") as file:
        for target in targets:
            file.write(target + "\n")


def read_user_list(user_list_path):
    # Read user list from file
    with open(user_list_path, "r") as file:
        users = [line.strip() for line in file.readlines() if line.strip()]
    return users


def enum4linux(target_ip, user, password):
    try:
        # Construct the enum4linux command
        command = ["enum4linux", "-a", "-v", "-l", target_ip]

        # Add user and password if available
        if user:
            command.extend(["-U", user])
        if password:
            command.extend(["-P", password])
        else:
            # Use default -k flag if no password list provided
            command.append("-k")

        # Execute the command
        result = subprocess.run(command, capture_output=True, text=True)
        print(result.stdout)
    except subprocess.CalledProcessError as e:
        print("Error executing enum4linux command:", e)
        print("Command:", " ".join(command))


if __name__ == "__main__":
    # Prompt for the number of targets
    while True:
        try:
            num_targets = int(input("Enter the number of targets: "))
            if num_targets <= 0:
                print("Number of targets must be greater than 0.")
            else:
                break
        except ValueError:
            print("Please enter a valid integer.")

    # List to store target IP addresses
    targets = []

    # Prompt for target IP addresses
    for i in range(num_targets):
        while True:
            target_ip = input(f"Enter IP address of target {i + 1}: ")
            if validate_ip(target_ip):
                targets.append(target_ip)
                break
            else:
                print("Invalid IP address format. Please enter a valid IP address.")

    # Create target file if there are multiple targets
    if num_targets > 1:
        create_target_file(targets)

    # Check if user has a prebuilt list of users
    user_list_path = "userlist.txt"
    if os.path.isfile(user_list_path):
        use_userlist = input("Do you have a prebuilt list of users (userlist.txt)? (yes/no): ")
        if use_userlist.lower() == "yes":
            users = read_user_list(user_list_path)
        else:
            users = None
    else:
        print(f"User list file '{user_list_path}' not found.")
        print("Please make sure the user list file exists.")

    # Check if password file exists
    password_list_path = "passwordlist.txt"
    if os.path.isfile(password_list_path):
        # Read password list from file
        with open(password_list_path, "r") as file:
            passwords = [line.strip() for line in file.readlines() if line.strip()]
    else:
        print(f"Password list file '{password_list_path}' not found.")
        print("Please make sure the password list file exists.")
        passwords = None

    # Execute enum4linux for each target
    for target_ip in targets:
        for user in users or [""]:
            for password in passwords or [""]:
                enum4linux(target_ip, user, password)
