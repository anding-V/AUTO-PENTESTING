import subprocess


def run_sniper_scan(target_file):
    # Commande à exécuter pour lancer le scan avec Sniper
    command = f"sniper -t {target_file} -o -re -w testrep "

    # Exécuter la commande
    try:
        subprocess.run(command, shell=True, check=True)
    except subprocess.CalledProcessError as e:
        print("Erreur lors de l'exécution de la commande :", e)
    except Exception as e:
        print("Une erreur s'est produite :", e)


def save_target_count_to_file(count):
    # Écrire le nombre de cibles dans le fichier target.txt
    with open("target.txt", "w") as file:
        file.write(str(count))


def collect_ips(num_targets):
    # Demander à l'utilisateur d'entrer les adresses IP
    print("Entrez les adresses IP des cibles (séparées par des espaces) :")
    ips = input().strip().split()

    # Vérifier si le nombre d'adresses IP correspond au nombre de cibles attendues
    if len(ips) != num_targets:
        print(
            f"Vous avez entré {len(ips)} adresses IP. Le nombre d'adresses IP doit correspondre au nombre de cibles spécifié.")
        exit(1)

    # Écrire les adresses IP dans le fichier target.txt
    with open("target.txt", "w") as file:
        file.write("\n".join(ips))


if __name__ == "__main__":
    # Demander à l'utilisateur le nombre de cibles à scanner
    num_targets = int(input("Entrez le nombre de cibles à scanner : "))

    # Enregistrer le nombre de cibles dans le fichier target.txt
    save_target_count_to_file(num_targets)

    # Collecter les adresses IP
    collect_ips(num_targets)

    # Exécuter le scan avec Sniper en utilisant le fichier target.txt
    run_sniper_scan("target.txt")
