import subprocess
import re
import os


def validate_ip(ip):
    # Regular expression pattern for validating IP address
    ip_pattern = r"^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$"
    return re.match(ip_pattern, ip)


def create_target_file(targets):
    with open("../target.txt", "w") as file:
        for target in targets:
            file.write(target + "\n")


def Enum_usr_sys(target_ip, user_list_path=None):
    try:
        # Construct the enum4linux command
        command = ["enum4linux", "-a", "-v", target_ip]

        # Add options for user list if available
        if user_list_path:
            command.extend(["-U", user_list_path])
        else:
            command.append("-u")

        # Execute the command
        subprocess.run(command, check=True)
    except subprocess.CalledProcessError as e:
        print("Error executing enum4linux command:", e)


def Exec_enum():
    # Prompt for the number of targets
    num_targets = int(input("Enter the number of target IP addresses: "))

    # Validate each target IP and store valid ones
    targets = []
    for i in range(num_targets):
        while True:
            target_ip = input(f"Enter target IP address {i + 1}: ")
            if validate_ip(target_ip):
                targets.append(target_ip)
                break
            else:
                print("Invalid IP address format. Please enter a valid IP address.")

    if not targets:
        print("No valid target IP addresses provided. Exiting.")
    else:
        # Create a target file if there are multiple targets
        if len(targets) > 1:
            create_target_file(targets)
            user_list_input = input("Do you have a list of users? (yes/no): ").lower()
            if user_list_input == "yes":
                # Prompt the user to make sure userlist.txt is found in the current directory
                print("Please make sure the userlist.txt file is found in the current directory:", os.getcwd())
                user_list_path = "../userlist.txt"  # Change this to the actual path if needed
                if os.path.isfile(user_list_path):
                    # Run enum4linux for each target IP
                    with open("../target.txt", "r") as file:
                        for line in file:
                            target_ip = line.strip()
                            Enum_usr_sys(target_ip, user_list_path)
                else:
                    print("User list file (userlist.txt) not found in the current directory.")
            else:
                # Run enum4linux without a user list for each target IP
                for target_ip in targets:
                    Enum_usr_sys(target_ip)
        else:
            # If there's only one target, run enum4linux without creating a target file
            target_ip = targets[0]
            user_list_input = input("Do you have a list of users? (yes/no): ").lower()
            if user_list_input == "yes":
                # Prompt the user to make sure userlist.txt is found in the current directory
                print("Please make sure the userlist.txt file is found in the current directory:", os.getcwd())
                user_list_path = "../userlist.txt"  # Change this to the actual path if needed
                if os.path.isfile(user_list_path):
                    # Run enum4linux for the single target IP with the user list
                    Enum_usr_sys(target_ip, user_list_path)
                else:
                    print("User list file (userlist.txt) not found in the current directory.")
            else:
                # Run enum4linux without a user list for the single target IP
                Enum_usr_sys(target_ip)
