import subprocess
import re
import os


def validate_ip(ip):
    # Regular expression pattern for validating IP address
    ip_pattern = r"^(?:[0-9]{1,3}\.){3}[0-9]{1,3}$"
    return re.match(ip_pattern, ip)


def create_target_file(targets):
    with open("target.txt", "w") as file:
        for target in targets:
            file.write(target + "\n")


def enum4linux(target_ip, user_list_path=None):
    try:
        # Construct the enum4linux command
        command = ["enum4linux", "-a", "-v", "-l", target_ip]

        # Add the target IP to the command
        command.append(target_ip)

        # Add options for user list if available
        if user_list_path:
            command.extend(["-U", user_list_path])

        # Execute the command
        subprocess.run(command, check=True)
    except subprocess.CalledProcessError as e:
        print("Error executing enum4linux command:", e)


if __name__ == "__main__":
    # Prompt for the number of targets
    while True:
        num_targets = input("Enter the number of target IP addresses: ")
        if num_targets.isdigit() and int(num_targets) > 0:
            num_targets = int(num_targets)
            break
        else:
            print("Invalid input. Please enter a positive integer.")

    # List to store valid target IP addresses
    targets = []

    # Validate each target IP and store valid ones
    for i in range(num_targets):
        while True:
            target_ip = input(f"Enter target IP address {i + 1}: ")
            if validate_ip(target_ip):
                targets.append(target_ip)
                break
            else:
                print("Invalid IP address format. Please enter a valid IP address.")

    # Check if there are valid target IP addresses
    if not targets:
        print("No valid target IP addresses provided. Exiting.")
    else:
        # Create a target file if there is more than one target
        if len(targets) > 1:
            create_target_file(targets)

        # Check if the user has a user list
        user_list_input = input("Do you have a list of users? (yes/no): ").lower()

        if user_list_input == "yes":
            # Check if the user list file exists
            user_list_path = "userlist.txt"
            if os.path.isfile(user_list_path):
                # Read the target IP addresses from the file
                for target_ip in targets:
                    # Call enum4linux for each target IP with the user list
                    enum4linux(target_ip, user_list_path)
            else:
                print("User list file (userlist.txt) not found in the current directory. Please make sure it is there.")
        else:
            # Call enum4linux for each target IP without a user list
            for target_ip in targets:
                enum4linux(target_ip)
